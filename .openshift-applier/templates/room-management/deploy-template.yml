---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: deploy-template
  system: dino-dash
  app: room-management
  kind: quarkus
metadata:
  name: deploy-template
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      system: dino-dash
      app: ${APP_NAME}
      kind: nodejs
    name: ${APP_NAME}
  spec: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      system: dino-dash
      app: ${APP_NAME}
      kind: nodejs
    name: ${APP_NAME}
  spec:
    port:
      targetPort: service
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      system: dino-dash
      app: ${APP_NAME}
      kind: nodejs
    name: ${APP_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      system: dino-dash
      app: ${APP_NAME}
      kind: nodejs
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    generation: 2
    labels:
      system: dino-dash
      app: ${APP_NAME}
      kind: nodejs
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      system: dino-dash
      app: ${APP_NAME}
      kind: nodejs
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          system: dino-dash
          app: ${APP_NAME}
          kind: nodejs
      spec:
        containers:
        - env:
            - name: DATABASE_URL
              value: ${DATABASE_URL}
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${APP_NAME}-db
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${APP_NAME}-db
          image: ' '
          imagePullPolicy: Always
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
  status: {}
- apiVersion: v1
  kind: RoleBinding
  metadata:
    name: edit
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: "${PIPELINES_NAMESPACE}"
  userNames:
  - system:serviceaccount:${PIPELINES_NAMESPACE}:${DEPLOYER_USER}
parameters:
- name: CPU_REQUEST
  required: true
  value: 50m
- name: CPU_LIMIT
  required: true
  value: 100m
- name: MEMORY_REQUEST
  required: true
  value: 100Mi
- name: MEMORY_LIMIT
  required: true
  value: 200Mi
- name: APP_NAME
  required: true
  value: room-management
- name: DATABASE_URL
  required: true
  value: jdbc:mariadb://room-management-db:3306/roomdb
- name: PIPELINES_NAMESPACE
  required: true
- name: DEPLOYER_USER
  required: true
  value: jenkins
